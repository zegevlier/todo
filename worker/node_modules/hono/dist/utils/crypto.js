"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHash = exports.sha1 = exports.sha256 = void 0;
const sha256 = async (data) => {
    const algorithm = { name: 'SHA-256', alias: 'sha256' };
    const hash = await (0, exports.createHash)(data, algorithm);
    return hash;
};
exports.sha256 = sha256;
const sha1 = async (data) => {
    const algorithm = { name: 'SHA-1', alias: 'sha1' };
    const hash = await (0, exports.createHash)(data, algorithm);
    return hash;
};
exports.sha1 = sha1;
const createHash = async (data, algorithm) => {
    if (crypto && crypto.subtle) {
        const buffer = await crypto.subtle.digest({
            name: algorithm.name,
        }, new TextEncoder().encode(String(data)));
        const hash = Array.prototype.map
            .call(new Uint8Array(buffer), (x) => ('00' + x.toString(16)).slice(-2))
            .join('');
        return hash;
    }
    return null;
};
exports.createHash = createHash;
