import type { Context } from '../../context';
import type { Next } from '../../hono';
declare global {
    interface Request {
        cookie: {
            (name: string): string;
            (): Record<string, string>;
        };
    }
}
declare module '../../context' {
    interface Context {
        cookie: (name: string, value: string, options?: CookieOptions) => void;
    }
}
export declare type Cookie = Record<string, string>;
export declare type CookieOptions = {
    domain?: string;
    expires?: Date;
    httpOnly?: boolean;
    maxAge?: number;
    path?: string;
    secure?: boolean;
    signed?: boolean;
    sameSite?: 'Strict' | 'Lax' | 'None';
};
export declare const cookie: () => (c: Context, next: Next) => Promise<void>;
