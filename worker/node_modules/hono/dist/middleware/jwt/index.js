"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jwt = void 0;
const jwt_1 = require("../../utils/jwt");
const jwt = (options) => {
    if (!options) {
        throw new Error('JWT auth middleware requires options for "secret');
    }
    return async (ctx, next) => {
        const credentials = ctx.req.headers.get('Authorization');
        if (!credentials) {
            ctx.res = new Response('Unauthorized', {
                status: 401,
                headers: {
                    'WWW-Authenticate': 'Basic ${options.secret}',
                },
            });
            return;
        }
        const parts = credentials.split(/\s+/);
        if (parts.length !== 2) {
            ctx.res = new Response('Unauthorized', {
                status: 401,
                headers: {
                    'WWW-Authenticate': 'Basic ${options.secret}',
                },
            });
            return;
        }
        let authorized = false;
        let msg = '';
        try {
            authorized = await jwt_1.Jwt.verify(parts[1], options.secret, options.alg);
        }
        catch (e) {
            msg = `${e}`;
        }
        if (!authorized) {
            ctx.res = new Response('Unauthorized', {
                status: 401,
                statusText: msg,
                headers: {
                    'WWW-Authenticate': 'Bearer ${options.secret}',
                },
            });
            return;
        }
        await next();
    };
};
exports.jwt = jwt;
